name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: "production"

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Build and Bundle Application
        run: 
          # Install dependencies needed for compilation
          npm install -D @babel/parser @babel/types undici-types csstype pg-types pg-protocol|
          
          # First compile the TypeScript worker to JavaScript
          npx tsc --target ES2022 --module ESNext --outDir ./dist server/worker.ts

          # Copy the compiled file to the correct location
          cp ./dist/server/worker.js .terraform/worker.js

          # Verify the worker has proper ESM export syntax
          if ! grep -q "export default" ./terraform/worker.js; then
            echo "Error: worker.js does not contain ESM export syntax"
            exit 1
          fi
          ls -la terraform/
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          
      - name: Deploy with Terraform
        env:
          TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          TF_VAR_neon_database_url: ${{ secrets.DATABASE_URL }}
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve